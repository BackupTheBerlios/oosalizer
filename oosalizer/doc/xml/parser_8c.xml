<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.6">
  <compounddef id="parser_8c" kind="file">
    <compoundname>parser.c</compoundname>
    <includes local="no">time.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">sys/utsname.h</includes>
    <includes local="no">sys/times.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes refid="webalizer_8h" local="yes">webalizer.h</includes>
    <includes refid="lang_8h" local="yes">lang.h</includes>
    <includes refid="parser_8h" local="yes">parser.h</includes>
    <incdepgraph>
      <node id="280">
        <label>sys/times.h</label>
      </node>
      <node id="275">
        <label>stdlib.h</label>
      </node>
      <node id="281">
        <label>sys/types.h</label>
      </node>
      <node id="276">
        <label>string.h</label>
      </node>
      <node id="277">
        <label>unistd.h</label>
      </node>
      <node id="283">
        <label>lang.h</label>
        <link refid="lang_8h"/>
      </node>
      <node id="273">
        <label>time.h</label>
      </node>
      <node id="272">
        <label>oosalizer/parser.c</label>
        <link refid="parser.c"/>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="282" relation="include">
        </childnode>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
      </node>
      <node id="282">
        <label>webalizer.h</label>
        <link refid="webalizer_8h"/>
      </node>
      <node id="284">
        <label>parser.h</label>
        <link refid="parser_8h"/>
      </node>
      <node id="278">
        <label>ctype.h</label>
      </node>
      <node id="274">
        <label>stdio.h</label>
      </node>
      <node id="279">
        <label>sys/utsname.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="parser_8c_103df76d1f70664d745ca8de2864e39b3" prot="public" static="no">
        <name>CLK_TCK</name>
        <initializer>_SC_CLK_TCK</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/r23/oosalizer/parser.c" line="59" bodyfile="/home/r23/oosalizer/parser.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="parser_8c_105c2b956fa80dba2cd2fcce536158855" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fmt_logrec</definition>
        <argsstring>(char *)</argsstring>
        <name>fmt_logrec</name>
        <param>
          <type>char *</type>
          <defname>buffer</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/r23/oosalizer/parser.c" line="67" bodyfile="/home/r23/oosalizer/parser.c" bodystart="76" bodyend="95"/>
        <referencedby refid="parser_8c_1630c3ac0dab48c2fba68649da4bb871e" compoundref="parser_8c" startline="134" endline="214">parse_record_ftp</referencedby>
        <referencedby refid="parser_8c_12b00ce99cc8f1387d75aeb7193968b21" compoundref="parser_8c" startline="379" endline="502">parse_record_squid</referencedby>
        <referencedby refid="parser_8c_1f79ff394bf86e83cffbcb560096f5052" compoundref="parser_8c" startline="220" endline="373">parse_record_web</referencedby>
      </memberdef>
      <memberdef kind="function" id="parser_8c_1f79ff394bf86e83cffbcb560096f5052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parse_record_web</definition>
        <argsstring>(char *)</argsstring>
        <name>parse_record_web</name>
        <param>
          <type>char *</type>
          <defname>buffer</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/r23/oosalizer/parser.c" line="68" bodyfile="/home/r23/oosalizer/parser.c" bodystart="220" bodyend="373"/>
        <references refid="structlog__struct_1b512bdcfac62ef38139eaf1701994a4f" compoundref="webalizer_8h" startline="160">log_struct::agent</references>
        <references refid="structlog__struct_11a6e77deebf410bb8fefe35aa02e384c" compoundref="webalizer_8h" startline="152">log_struct::datetime</references>
        <references refid="webalizer_8c_14f7caf3ead45aac3963d1e354e820017" compoundref="webalizer_8c" startline="109">debug_mode</references>
        <references refid="parser_8c_105c2b956fa80dba2cd2fcce536158855" compoundref="parser_8c" startline="76" endline="95">fmt_logrec</references>
        <references refid="structlog__struct_18d92ed4a00d2d6b0f155bdbfcc551478" compoundref="webalizer_8h" startline="151">log_struct::hostname</references>
        <references refid="structlog__struct_1abac03796cba2fed0c5185a55e5578bd" compoundref="webalizer_8h" startline="162">log_struct::ident</references>
        <references refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" compoundref="webalizer_8c" startline="209">log_rec</references>
        <references refid="webalizer_8h_1cac54bd107b23b8a6433b11c185a884d" compoundref="webalizer_8h" startline="22">MAXAGENT</references>
        <references refid="webalizer_8h_135a96510c197e5b56b079fd4b85a40d6" compoundref="webalizer_8h" startline="17">MAXHOST</references>
        <references refid="webalizer_8h_1f4f5153d8faa075eda9141a6de77764b" compoundref="webalizer_8h" startline="26">MAXIDENT</references>
        <references refid="webalizer_8h_193490f19b31aee2379f0acc0aa08af06" compoundref="webalizer_8h" startline="20">MAXREF</references>
        <references refid="webalizer_8h_1154e43d94122a068e2f1b110ef9885fa" compoundref="webalizer_8h" startline="18">MAXURL</references>
        <references refid="lang_8h_15cf2461dfbe62c32f225953b0326462c">msg_big_date</references>
        <references refid="lang_8h_16ce7f8ad0ab920f3113dff9e936dc9a5">msg_big_host</references>
        <references refid="lang_8h_1ae731a9fc075ed277c6ee4b8a6384ea0">msg_big_ref</references>
        <references refid="lang_8h_143eab59f53dc27f4f768755b759684f7">msg_big_req</references>
        <references refid="lang_8h_19f2cc97f2917013977b0b0969a5c7960">msg_big_user</references>
        <references refid="structlog__struct_1cb4f74246c1b97c518bbcc8a4823c0d4" compoundref="webalizer_8h" startline="159">log_struct::refer</references>
        <references refid="structlog__struct_1b8db9826a57acc82a4c7d99948a9b89c" compoundref="webalizer_8h" startline="154">log_struct::resp_code</references>
        <references refid="structlog__struct_1479e09f2dc389f8a0a57b9c3146d9d32" compoundref="webalizer_8h" startline="153">log_struct::url</references>
        <references refid="webalizer_8c_10b2caeb4b6f130be43e5a2f0267dd453" compoundref="webalizer_8c" startline="108">verbose</references>
        <references refid="structlog__struct_18147dacfe44060fa40bb3caf79e3fdd1" compoundref="webalizer_8h" startline="155">log_struct::xfer_size</references>
        <referencedby refid="parser_8h_12e298d5e806fc4936bf6b142c0913a31" compoundref="parser_8c" startline="101" endline="128">parse_record</referencedby>
      </memberdef>
      <memberdef kind="function" id="parser_8c_1630c3ac0dab48c2fba68649da4bb871e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parse_record_ftp</definition>
        <argsstring>(char *)</argsstring>
        <name>parse_record_ftp</name>
        <param>
          <type>char *</type>
          <defname>buffer</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/r23/oosalizer/parser.c" line="69" bodyfile="/home/r23/oosalizer/parser.c" bodystart="134" bodyend="214"/>
        <references refid="structlog__struct_11a6e77deebf410bb8fefe35aa02e384c" compoundref="webalizer_8h" startline="152">log_struct::datetime</references>
        <references refid="parser_8c_105c2b956fa80dba2cd2fcce536158855" compoundref="parser_8c" startline="76" endline="95">fmt_logrec</references>
        <references refid="structlog__struct_18d92ed4a00d2d6b0f155bdbfcc551478" compoundref="webalizer_8h" startline="151">log_struct::hostname</references>
        <references refid="structlog__struct_1abac03796cba2fed0c5185a55e5578bd" compoundref="webalizer_8h" startline="162">log_struct::ident</references>
        <references refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" compoundref="webalizer_8c" startline="209">log_rec</references>
        <references refid="webalizer_8h_135a96510c197e5b56b079fd4b85a40d6" compoundref="webalizer_8h" startline="17">MAXHOST</references>
        <references refid="webalizer_8h_1154e43d94122a068e2f1b110ef9885fa" compoundref="webalizer_8h" startline="18">MAXURL</references>
        <references refid="structlog__struct_1b8db9826a57acc82a4c7d99948a9b89c" compoundref="webalizer_8h" startline="154">log_struct::resp_code</references>
        <references refid="structlog__struct_1479e09f2dc389f8a0a57b9c3146d9d32" compoundref="webalizer_8h" startline="153">log_struct::url</references>
        <references refid="structlog__struct_18147dacfe44060fa40bb3caf79e3fdd1" compoundref="webalizer_8h" startline="155">log_struct::xfer_size</references>
        <referencedby refid="parser_8h_12e298d5e806fc4936bf6b142c0913a31" compoundref="parser_8c" startline="101" endline="128">parse_record</referencedby>
      </memberdef>
      <memberdef kind="function" id="parser_8c_12b00ce99cc8f1387d75aeb7193968b21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parse_record_squid</definition>
        <argsstring>(char *)</argsstring>
        <name>parse_record_squid</name>
        <param>
          <type>char *</type>
          <defname>buffer</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/r23/oosalizer/parser.c" line="70" bodyfile="/home/r23/oosalizer/parser.c" bodystart="379" bodyend="502"/>
        <references refid="structlog__struct_11a6e77deebf410bb8fefe35aa02e384c" compoundref="webalizer_8h" startline="152">log_struct::datetime</references>
        <references refid="webalizer_8c_14f7caf3ead45aac3963d1e354e820017" compoundref="webalizer_8c" startline="109">debug_mode</references>
        <references refid="parser_8c_105c2b956fa80dba2cd2fcce536158855" compoundref="parser_8c" startline="76" endline="95">fmt_logrec</references>
        <references refid="structlog__struct_18d92ed4a00d2d6b0f155bdbfcc551478" compoundref="webalizer_8h" startline="151">log_struct::hostname</references>
        <references refid="structlog__struct_1abac03796cba2fed0c5185a55e5578bd" compoundref="webalizer_8h" startline="162">log_struct::ident</references>
        <references refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" compoundref="webalizer_8c" startline="209">log_rec</references>
        <references refid="webalizer_8h_135a96510c197e5b56b079fd4b85a40d6" compoundref="webalizer_8h" startline="17">MAXHOST</references>
        <references refid="webalizer_8h_1f4f5153d8faa075eda9141a6de77764b" compoundref="webalizer_8h" startline="26">MAXIDENT</references>
        <references refid="webalizer_8h_1154e43d94122a068e2f1b110ef9885fa" compoundref="webalizer_8h" startline="18">MAXURL</references>
        <references refid="lang_8h_16ce7f8ad0ab920f3113dff9e936dc9a5">msg_big_host</references>
        <references refid="lang_8h_143eab59f53dc27f4f768755b759684f7">msg_big_req</references>
        <references refid="structlog__struct_1b8db9826a57acc82a4c7d99948a9b89c" compoundref="webalizer_8h" startline="154">log_struct::resp_code</references>
        <references refid="structlog__struct_1479e09f2dc389f8a0a57b9c3146d9d32" compoundref="webalizer_8h" startline="153">log_struct::url</references>
        <references refid="webalizer_8c_10b2caeb4b6f130be43e5a2f0267dd453" compoundref="webalizer_8c" startline="108">verbose</references>
        <references refid="structlog__struct_18147dacfe44060fa40bb3caf79e3fdd1" compoundref="webalizer_8h" startline="155">log_struct::xfer_size</references>
        <referencedby refid="parser_8h_12e298d5e806fc4936bf6b142c0913a31" compoundref="parser_8c" startline="101" endline="128">parse_record</referencedby>
      </memberdef>
      <memberdef kind="function" id="parser_8c_1f7f838e64a0d2b296d0b8b09b49d6b85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int parse_record</definition>
        <argsstring>(char *buffer)</argsstring>
        <name>parse_record</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/r23/oosalizer/parser.c" line="102" bodyfile="/home/r23/oosalizer/parser.c" bodystart="101" bodyend="128"/>
        <references refid="webalizer_8h_15ce0d49d0e92ba00b7385ef68d26b51a" compoundref="webalizer_8h" startline="31">LOG_CLF</references>
        <references refid="webalizer_8h_1cf5d4c2811adb735aaf5b32f62cc3cea" compoundref="webalizer_8h" startline="32">LOG_FTP</references>
        <references refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" compoundref="webalizer_8c" startline="209">log_rec</references>
        <references refid="webalizer_8h_143821087b540ecbc400b7cef8ab10be0" compoundref="webalizer_8h" startline="33">LOG_SQUID</references>
        <references refid="webalizer_8c_1d1e2a6d9014a2af70dfa80ce7b69d4b0" compoundref="webalizer_8c" startline="127">log_type</references>
        <references refid="parser_8c_1630c3ac0dab48c2fba68649da4bb871e" compoundref="parser_8c" startline="134" endline="214">parse_record_ftp</references>
        <references refid="parser_8c_12b00ce99cc8f1387d75aeb7193968b21" compoundref="parser_8c" startline="379" endline="502">parse_record_squid</references>
        <references refid="parser_8c_1f79ff394bf86e83cffbcb560096f5052" compoundref="parser_8c" startline="220" endline="373">parse_record_web</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>webalizer<sp/>-<sp/>a<sp/>web<sp/>server<sp/>log<sp/>analysis<sp/>program</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>1997-2001<sp/><sp/>Bradford<sp/>L.<sp/>Barrett<sp/>(brad@mrunix.net)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version,<sp/>and<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>copyright<sp/>and<sp/>permission<sp/>notice<sp/>is<sp/>included<sp/>with<sp/>all<sp/>distributed</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>copies<sp/>of<sp/>this<sp/>or<sp/>derived<sp/>software.</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>software<sp/>uses<sp/>the<sp/>gd<sp/>graphics<sp/>library,<sp/>which<sp/>is<sp/>copyright<sp/>by</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/>Quest<sp/>Protein<sp/>Database<sp/>Center,<sp/>Cold<sp/>Spring<sp/>Harbor<sp/>Labs.<sp/><sp/>Please</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/>see<sp/>the<sp/>documentation<sp/>supplied<sp/>with<sp/>the<sp/>library<sp/>for<sp/>additional</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/>information<sp/>and<sp/>license<sp/>terms,<sp/>or<sp/>visit<sp/>www.boutell.com/gd/<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/>most<sp/>recent<sp/>version<sp/>of<sp/>the<sp/>library<sp/>and<sp/>supporting<sp/>documentation.</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>STANDARD<sp/>INCLUDES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>normal<sp/>stuff<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/utsname.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/times.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ensure<sp/>getopt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_GETOPT_H</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;getopt.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ensure<sp/>sys/types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_SYS_TYPES_H</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>some<sp/>systems<sp/>need<sp/>this<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_MATH_H</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SunOS<sp/>4.x<sp/>Fix<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CLK_TCK</highlight></codeline>
<codeline lineno="59" refid="parser_8c_103df76d1f70664d745ca8de2864e39b3" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CLK_TCK<sp/>_SC_CLK_TCK</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="webalizer_8h" kindref="compound">webalizer.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>main<sp/>header<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lang_8h" kindref="compound">lang.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parser_8h" kindref="compound">parser.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>internal<sp/>function<sp/>prototypes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parser_8c_105c2b956fa80dba2cd2fcce536158855" kindref="member">fmt_logrec</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="parser_8c_1f79ff394bf86e83cffbcb560096f5052" kindref="member">parse_record_web</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="parser_8c_1630c3ac0dab48c2fba68649da4bb871e" kindref="member">parse_record_ftp</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="parser_8c_12b00ce99cc8f1387d75aeb7193968b21" kindref="member">parse_record_squid</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>FMT_LOGREC<sp/>-<sp/>terminate<sp/>log<sp/>fields<sp/>w/zeros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="parser_8c_105c2b956fa80dba2cd2fcce536158855" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="parser_8c_105c2b956fa80dba2cd2fcce536158855" kindref="member">fmt_logrec</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="webalizer_8c_109b4e72533ab279f7930a9a5e3ab050c" kindref="member">buffer</ref>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cp=buffer;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>q=0,b=0,p=0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>break<sp/>record<sp/>up,<sp/>terminate<sp/>fields<sp/>with<sp/>&apos;\0&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*cp)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b<sp/>||<sp/>q<sp/>||<sp/>p)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>*cp=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">:<sp/>q^=1;<sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>b++;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b&gt;0)<sp/>b--;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>p++;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(q)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p&gt;0)<sp/>p--;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cp++;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PARSE_RECORD<sp/>-<sp/>uhhh,<sp/>you<sp/>know...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">/*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="parser_8h_12e298d5e806fc4936bf6b142c0913a31" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="parser_8c_1f7f838e64a0d2b296d0b8b09b49d6b85" kindref="member">parse_record</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="webalizer_8c_109b4e72533ab279f7930a9a5e3ab050c" kindref="member">buffer</ref>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>out<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>memset(&amp;<ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structlog__struct" kindref="compound">log_struct</ref>));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/>log_rec.hostname[0]=0;</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/>log_rec.datetime[0]=0;</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/>log_rec.url[0]=0;</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/>log_rec.resp_code=0;</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/>log_rec.xfer_size=0;</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/>log_rec.refer[0]=0;</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/>log_rec.agent[0]=0;</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/>log_rec.srchstr[0]=0;</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/>log_rec.ident[0]=0;</highlight></codeline>
<codeline lineno="115"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_DNS</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/>memset(&amp;<ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.addr,0,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>in_addr));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>call<sp/>appropriate<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="webalizer_8c_1d1e2a6d9014a2af70dfa80ce7b69d4b0" kindref="member">log_type</ref>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="webalizer_8h_15ce0d49d0e92ba00b7385ef68d26b51a" kindref="member">LOG_CLF</ref>:<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="parser_8c_1f79ff394bf86e83cffbcb560096f5052" kindref="member">parse_record_web</ref>(buffer);<sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>clf<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="webalizer_8h_1cf5d4c2811adb735aaf5b32f62cc3cea" kindref="member">LOG_FTP</ref>:<sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="parser_8c_1630c3ac0dab48c2fba68649da4bb871e" kindref="member">parse_record_ftp</ref>(buffer);<sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>ftp<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="webalizer_8h_143821087b540ecbc400b7cef8ab10be0" kindref="member">LOG_SQUID</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="parser_8c_12b00ce99cc8f1387d75aeb7193968b21" kindref="member">parse_record_squid</ref>(buffer);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>squid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PARSE_RECORD_FTP<sp/>-<sp/>ftp<sp/>log<sp/>handler<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="parser_8c_1630c3ac0dab48c2fba68649da4bb871e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="parser_8c_1630c3ac0dab48c2fba68649da4bb871e" kindref="member">parse_record_ftp</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="webalizer_8c_109b4e72533ab279f7930a9a5e3ab050c" kindref="member">buffer</ref>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cp1,<sp/>*cp2,<sp/>*cpx,<sp/>*cpy,<sp/>*eob;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>size<sp/>=<sp/>strlen(buffer);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>length<sp/>of<sp/>buffer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/>eob<sp/>=<sp/>buffer+size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>end<sp/>of<sp/>buffer<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><ref refid="parser_8c_105c2b956fa80dba2cd2fcce536158855" kindref="member">fmt_logrec</ref>(buffer);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seperate<sp/>fields<sp/>with<sp/>\0&apos;s<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Start<sp/>out<sp/>with<sp/>date/time<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/>cp1=buffer;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1==0)<sp/>cp1++;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>cpx=cp1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>save<sp/>month<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1==0)<sp/>cp1++;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>i=atoi(cp1);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>day<sp/>number<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1==0)<sp/>cp1++;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>cpy=cp1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>timestamp<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1==0)<sp/>cp1++;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/>j=atoi(cp1);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>year<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>minimal<sp/>sanity<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*(cpy+2)!=</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>||<sp/>*(cpy+5)!=</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j&lt;1990<sp/>||<sp/>j&gt;2100)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i&lt;1<sp/>||<sp/>i&gt;31)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>format<sp/>date/time<sp/>field<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>snprintf(<ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_11a6e77deebf410bb8fefe35aa02e384c" kindref="member">datetime</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_11a6e77deebf410bb8fefe35aa02e384c" kindref="member">datetime</ref>),</highlight><highlight class="stringliteral">&quot;[%02d/%s/%4d:%s<sp/>-0000]&quot;</highlight><highlight class="normal">,i,cpx,j,cpy);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>seconds...<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1==0)<sp/>cp1++;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1==0)<sp/>cp1++;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>hostname<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/>cp2=<ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_18d92ed4a00d2d6b0f155bdbfcc551478" kindref="member">hostname</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/>strncpy(cp2,cp1,<ref refid="webalizer_8h_135a96510c197e5b56b079fd4b85a40d6" kindref="member">MAXHOST</ref>-1);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>filesize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1==0)<sp/>cp1++;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cp1&lt;&apos;0&apos;||*cp1&gt;</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/><ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_18147dacfe44060fa40bb3caf79e3fdd1" kindref="member">xfer_size</ref>=0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_18147dacfe44060fa40bb3caf79e3fdd1" kindref="member">xfer_size</ref><sp/>=<sp/>strtoul(cp1,NULL,10);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>URL<sp/>stuff<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1==0)<sp/>cp1++;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/>cpx=cp1;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>next<sp/>field<sp/>for<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1==0)<sp/>cp1++;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(cpx)&gt;<ref refid="webalizer_8h_1154e43d94122a068e2f1b110ef9885fa" kindref="member">MAXURL</ref>-20)<sp/>*(cpx+(<ref refid="webalizer_8h_1154e43d94122a068e2f1b110ef9885fa" kindref="member">MAXURL</ref>-20))=0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>next<sp/>two<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1==0)<sp/>cp1++;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1==0)<sp/>cp1++;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fabricate<sp/>an<sp/>appropriate<sp/>request<sp/>string<sp/>based<sp/>on<sp/>direction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cp1==</highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">)<sp/>snprintf(<ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_1479e09f2dc389f8a0a57b9c3146d9d32" kindref="member">url</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_1479e09f2dc389f8a0a57b9c3146d9d32" kindref="member">url</ref>),</highlight><highlight class="stringliteral">&quot;\&quot;POST<sp/>%s<sp/>HTTP/1.0\&quot;&quot;</highlight><highlight class="normal">,cpx);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(<ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_1479e09f2dc389f8a0a57b9c3146d9d32" kindref="member">url</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_1479e09f2dc389f8a0a57b9c3146d9d32" kindref="member">url</ref>),</highlight><highlight class="stringliteral">&quot;\&quot;GET<sp/>%s<sp/>HTTP/1.0\&quot;&quot;</highlight><highlight class="normal">,cpx);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/>cp2=<ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_1abac03796cba2fed0c5185a55e5578bd" kindref="member">ident</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob)<sp/>*cp2++<sp/>=<sp/>*cp1++;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/>*cp2=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>appropriate<sp/>response<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_1b8db9826a57acc82a4c7d99948a9b89c" kindref="member">resp_code</ref>=(*(eob-2)==</highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">)?206:200;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">/*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PARSE_RECORD_WEB<sp/>-<sp/>web<sp/>log<sp/>handler<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">/*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="parser_8c_1f79ff394bf86e83cffbcb560096f5052" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="parser_8c_1f79ff394bf86e83cffbcb560096f5052" kindref="member">parse_record_web</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="webalizer_8c_109b4e72533ab279f7930a9a5e3ab050c" kindref="member">buffer</ref>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cp1,<sp/>*cp2,<sp/>*cpx,<sp/>*eob,<sp/>*eos;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>size<sp/>=<sp/>strlen(buffer);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>length<sp/>of<sp/>buffer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/>eob<sp/>=<sp/>buffer+size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>end<sp/>of<sp/>buffer<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><ref refid="parser_8c_105c2b956fa80dba2cd2fcce536158855" kindref="member">fmt_logrec</ref>(buffer);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seperate<sp/>fields<sp/>with<sp/>\0&apos;s<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HOSTNAME<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/>cp1<sp/>=<sp/>cpx<sp/>=<sp/>buffer;<sp/>cp2=<ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_18d92ed4a00d2d6b0f155bdbfcc551478" kindref="member">hostname</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/>eos<sp/>=<sp/>(cp1+<ref refid="webalizer_8h_135a96510c197e5b56b079fd4b85a40d6" kindref="member">MAXHOST</ref>)-1;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eos<sp/>&gt;=<sp/>eob)<sp/>eos=eob-1;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(cp1<sp/>!=<sp/>eos)<sp/>)<sp/>*cp2++<sp/>=<sp/>*cp1++;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/>*cp2<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="webalizer_8c_10b2caeb4b6f130be43e5a2f0267dd453" kindref="member">verbose</ref>)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<ref refid="lang_8h_16ce7f8ad0ab920f3113dff9e936dc9a5" kindref="member">msg_big_host</ref>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="webalizer_8c_14f7caf3ead45aac3963d1e354e820017" kindref="member">debug_mode</ref>)<sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;:<sp/>%s\n&quot;</highlight><highlight class="normal">,cpx);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>cp1++;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp1<sp/>&lt;<sp/>eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>next<sp/>field<sp/>(ident)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(cp1<sp/>&lt;<sp/>eob)<sp/>)<sp/>cp1++;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp1<sp/>&lt;<sp/>eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IDENT<sp/>(authuser)<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/>cpx<sp/>=<sp/>cp1;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>cp2<sp/>=<sp/><ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_1abac03796cba2fed0c5185a55e5578bd" kindref="member">ident</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/>eos<sp/>=<sp/>(cp1+<ref refid="webalizer_8h_1f4f5153d8faa075eda9141a6de77764b" kindref="member">MAXIDENT</ref>-1);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eos<sp/>&gt;=<sp/>eob)<sp/>eos=eob-1;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(cp1<sp/>&lt;<sp/>eos)<sp/>)<sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>embeded<sp/>spaces<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cp1==</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>*cp1=</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*cp2++=*cp1++;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/>*cp2--=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp1<sp/>&gt;=<sp/>eob)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>if<sp/>oversized<sp/>username<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="webalizer_8c_10b2caeb4b6f130be43e5a2f0267dd453" kindref="member">verbose</ref>)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<ref refid="lang_8h_19f2cc97f2917013977b0b0969a5c7960" kindref="member">msg_big_user</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="webalizer_8c_14f7caf3ead45aac3963d1e354e820017" kindref="member">debug_mode</ref>)<sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;:<sp/>%s\n&quot;</highlight><highlight class="normal">,cpx);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(cp1<sp/>&lt;<sp/>eob)<sp/>)<sp/>cp1++;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>strip<sp/>trailing<sp/>space(s)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp2==</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>*cp2--=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>date/time<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/>cpx<sp/>=<sp/>cp1;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/>cp2<sp/>=<sp/><ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_11a6e77deebf410bb8fefe35aa02e384c" kindref="member">datetime</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/>eos<sp/>=<sp/>(cp1+28);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eos<sp/>&gt;=<sp/>eob)<sp/>eos=eob-1;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(cp1<sp/>!=<sp/>eos)<sp/>)<sp/>*cp2++<sp/>=<sp/>*cp1++;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/>*cp2<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="webalizer_8c_10b2caeb4b6f130be43e5a2f0267dd453" kindref="member">verbose</ref>)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<ref refid="lang_8h_15cf2461dfbe62c32f225953b0326462c" kindref="member">msg_big_date</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="webalizer_8c_14f7caf3ead45aac3963d1e354e820017" kindref="member">debug_mode</ref>)<sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;:<sp/>%s\n&quot;</highlight><highlight class="normal">,cpx);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>cp1++;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp1<sp/>&lt;<sp/>eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>minimal<sp/>sanity<sp/>check<sp/>on<sp/>timestamp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_11a6e77deebf410bb8fefe35aa02e384c" kindref="member">datetime</ref>[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_11a6e77deebf410bb8fefe35aa02e384c" kindref="member">datetime</ref>[3]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cp1<sp/>&gt;=<sp/>eob))<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HTTP<sp/>request<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/>cpx<sp/>=<sp/>cp1;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/>cp2<sp/>=<sp/><ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_1479e09f2dc389f8a0a57b9c3146d9d32" kindref="member">url</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/>eos<sp/>=<sp/>(cp1+<ref refid="webalizer_8h_1154e43d94122a068e2f1b110ef9885fa" kindref="member">MAXURL</ref>-1);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eos<sp/>&gt;=<sp/>eob)<sp/>eos<sp/>=<sp/>eob-1;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(cp1<sp/>!=<sp/>eos)<sp/>)<sp/>*cp2++<sp/>=<sp/>*cp1++;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/>*cp2<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="webalizer_8c_10b2caeb4b6f130be43e5a2f0267dd453" kindref="member">verbose</ref>)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<ref refid="lang_8h_143eab59f53dc27f4f768755b759684f7" kindref="member">msg_big_req</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="webalizer_8c_14f7caf3ead45aac3963d1e354e820017" kindref="member">debug_mode</ref>)<sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;:<sp/>%s\n&quot;</highlight><highlight class="normal">,cpx);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>cp1++;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp1<sp/>&lt;<sp/>eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(<ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_1479e09f2dc389f8a0a57b9c3146d9d32" kindref="member">url</ref>[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cp1<sp/>&gt;=<sp/>eob)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>response<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_1b8db9826a57acc82a4c7d99948a9b89c" kindref="member">resp_code</ref><sp/>=<sp/>atoi(cp1);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xfer<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(cp1<sp/>&lt;<sp/>eob)<sp/>)<sp/>cp1++;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp1<sp/>&lt;<sp/>eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cp1&lt;&apos;0&apos;||*cp1&gt;</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/><ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_18147dacfe44060fa40bb3caf79e3fdd1" kindref="member">xfer_size</ref>=0;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_18147dacfe44060fa40bb3caf79e3fdd1" kindref="member">xfer_size</ref><sp/>=<sp/>strtoul(cp1,NULL,10);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>done<sp/>with<sp/>CLF<sp/>record<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp1&gt;=eob)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(cp1<sp/>&lt;<sp/>eob)<sp/>)<sp/>cp1++;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp1<sp/>&lt;<sp/>eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>referrer<sp/>if<sp/>present<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/>cpx<sp/>=<sp/>cp1;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/>cp2<sp/>=<sp/><ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_1cb4f74246c1b97c518bbcc8a4823c0d4" kindref="member">refer</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/>eos<sp/>=<sp/>(cp1+<ref refid="webalizer_8h_193490f19b31aee2379f0acc0aa08af06" kindref="member">MAXREF</ref>-1);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eos<sp/>&gt;=<sp/>eob)<sp/>eos<sp/>=<sp/>eob-1;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(cp1<sp/>!=<sp/>eos)<sp/>)<sp/>*cp2++<sp/>=<sp/>*cp1++;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/>*cp2<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="webalizer_8c_10b2caeb4b6f130be43e5a2f0267dd453" kindref="member">verbose</ref>)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<ref refid="lang_8h_1ae731a9fc075ed277c6ee4b8a6384ea0" kindref="member">msg_big_ref</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="webalizer_8c_14f7caf3ead45aac3963d1e354e820017" kindref="member">debug_mode</ref>)<sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;:<sp/>%s\n&quot;</highlight><highlight class="normal">,cpx);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>cp1++;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp1<sp/>&lt;<sp/>eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/>cpx<sp/>=<sp/>cp1;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/>cp2<sp/>=<sp/><ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_1b512bdcfac62ef38139eaf1701994a4f" kindref="member">agent</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/>eos<sp/>=<sp/>cp1+(<ref refid="webalizer_8h_1cac54bd107b23b8a6433b11c185a884d" kindref="member">MAXAGENT</ref>-1);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eos<sp/>&gt;=<sp/>eob)<sp/>eos<sp/>=<sp/>eob-1;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(cp1<sp/>!=<sp/>eos)<sp/>)<sp/>*cp2++<sp/>=<sp/>*cp1++;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/>*cp2<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>maybe<sp/>a<sp/>valid<sp/>record,<sp/>return<sp/>with<sp/>TRUE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">/*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>PARSE_RECORD_SQUID<sp/>-<sp/>squid<sp/>log<sp/>handler<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">/*********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="parser_8c_12b00ce99cc8f1387d75aeb7193968b21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="parser_8c_12b00ce99cc8f1387d75aeb7193968b21" kindref="member">parse_record_squid</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="webalizer_8c_109b4e72533ab279f7930a9a5e3ab050c" kindref="member">buffer</ref>)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/>time_t<sp/>i;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cp1,<sp/>*cp2,<sp/>*cpx,<sp/>*eob,<sp/>*eos;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/>size<sp/>=<sp/>strlen(buffer);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>length<sp/>of<sp/>buffer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/>eob<sp/>=<sp/>buffer+size;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>end<sp/>of<sp/>buffer<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><ref refid="parser_8c_105c2b956fa80dba2cd2fcce536158855" kindref="member">fmt_logrec</ref>(buffer);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>seperate<sp/>fields<sp/>with<sp/>\0&apos;s<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>date/time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/>cp1=buffer;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/>i=atoi(cp1);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>timestamp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>format<sp/>date/time<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/>strftime(<ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_11a6e77deebf410bb8fefe35aa02e384c" kindref="member">datetime</ref>,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_11a6e77deebf410bb8fefe35aa02e384c" kindref="member">datetime</ref>),</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;[%d/%b/%Y:%H:%M:%S<sp/>-0000]&quot;</highlight><highlight class="normal">,localtime(&amp;i));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1==0)<sp/>cp1++;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>request<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1==0)<sp/>cp1++;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HOSTNAME<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/>cpx<sp/>=<sp/>cp1;<sp/>cp2=<ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_18d92ed4a00d2d6b0f155bdbfcc551478" kindref="member">hostname</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/>eos<sp/>=<sp/>(cp1+<ref refid="webalizer_8h_135a96510c197e5b56b079fd4b85a40d6" kindref="member">MAXHOST</ref>)-1;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eos<sp/>&gt;=<sp/>eob)<sp/>eos=eob-1;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(cp1<sp/>!=<sp/>eos))<sp/>*cp2++<sp/>=<sp/>*cp1++;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/>*cp2=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="webalizer_8c_10b2caeb4b6f130be43e5a2f0267dd453" kindref="member">verbose</ref>)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<ref refid="lang_8h_16ce7f8ad0ab920f3113dff9e936dc9a5" kindref="member">msg_big_host</ref>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="webalizer_8c_14f7caf3ead45aac3963d1e354e820017" kindref="member">debug_mode</ref>)<sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;:<sp/>%s\n&quot;</highlight><highlight class="normal">,cpx);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>cp1++;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp1<sp/>&lt;<sp/>eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>cache<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob<sp/>&amp;&amp;<sp/>*cp1!=</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>cp1++;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/>cp1++;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>response<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_1b8db9826a57acc82a4c7d99948a9b89c" kindref="member">resp_code</ref><sp/>=<sp/>atoi(cp1);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1==0)<sp/>cp1++;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xfer<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cp1&lt;&apos;0&apos;||*cp1&gt;</highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/><ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_18147dacfe44060fa40bb3caf79e3fdd1" kindref="member">xfer_size</ref>=0;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_18147dacfe44060fa40bb3caf79e3fdd1" kindref="member">xfer_size</ref><sp/>=<sp/>strtoul(cp1,NULL,10);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1!=0<sp/>&amp;&amp;<sp/>cp1&lt;eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1==0)<sp/>cp1++;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HTTP<sp/>request<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/>cpx<sp/>=<sp/>cp1;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/>cp2<sp/>=<sp/><ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_1479e09f2dc389f8a0a57b9c3146d9d32" kindref="member">url</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/>*cp2++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/>eos<sp/>=<sp/>(cp1+<ref refid="webalizer_8h_1154e43d94122a068e2f1b110ef9885fa" kindref="member">MAXURL</ref>-1);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eos<sp/>&gt;=<sp/>eob)<sp/>eos<sp/>=<sp/>eob-1;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(cp1<sp/>!=<sp/>eos)<sp/>)<sp/>*cp2++<sp/>=<sp/>*cp1++;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/>*cp2<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="webalizer_8c_10b2caeb4b6f130be43e5a2f0267dd453" kindref="member">verbose</ref>)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<ref refid="lang_8h_143eab59f53dc27f4f768755b759684f7" kindref="member">msg_big_req</ref>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="webalizer_8c_14f7caf3ead45aac3963d1e354e820017" kindref="member">debug_mode</ref>)<sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;:<sp/>%s\n&quot;</highlight><highlight class="normal">,cpx);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>cp1++;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp1<sp/>&lt;<sp/>eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/>*cp2++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>HTTP<sp/>URL<sp/>requested<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/>cpx<sp/>=<sp/>cp1;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/>eos<sp/>=<sp/>(cp1+<ref refid="webalizer_8h_1154e43d94122a068e2f1b110ef9885fa" kindref="member">MAXURL</ref>-1);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eos<sp/>&gt;=<sp/>eob)<sp/>eos<sp/>=<sp/>eob-1;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(cp1<sp/>!=<sp/>eos)<sp/>)<sp/>*cp2++<sp/>=<sp/>*cp1++;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/>*cp2<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="webalizer_8c_10b2caeb4b6f130be43e5a2f0267dd453" kindref="member">verbose</ref>)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<ref refid="lang_8h_143eab59f53dc27f4f768755b759684f7" kindref="member">msg_big_req</ref>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="webalizer_8c_14f7caf3ead45aac3963d1e354e820017" kindref="member">debug_mode</ref>)<sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;:<sp/>%s\n&quot;</highlight><highlight class="normal">,cpx);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>cp1++;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp1<sp/>&lt;<sp/>eob)<sp/>cp1++;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/>*cp2++<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IDENT<sp/>(authuser)<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/>cpx<sp/>=<sp/>cp1;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/>cp2<sp/>=<sp/><ref refid="webalizer_8c_1b78a7a0970e517ad18adea541d2b2b32" kindref="member">log_rec</ref>.<ref refid="structlog__struct_1abac03796cba2fed0c5185a55e5578bd" kindref="member">ident</ref>;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/>eos<sp/>=<sp/>(cp1+<ref refid="webalizer_8h_1f4f5153d8faa075eda9141a6de77764b" kindref="member">MAXIDENT</ref>-1);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eos<sp/>&gt;=<sp/>eob)<sp/>eos=eob-1;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp1<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>cp1++;<sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>white<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>(*cp1<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*cp1!=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(cp1<sp/>&lt;<sp/>eos)<sp/>)<sp/><sp/>*cp2++=*cp1++;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/>*cp2--=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cp1<sp/>&gt;=<sp/>eob)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>strip<sp/>trailing<sp/>space(s)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*cp2==</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>*cp2--=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>no<sp/>interest<sp/>in<sp/>the<sp/>remaining<sp/>fields<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/r23/oosalizer/parser.c"/>
  </compounddef>
</doxygen>
